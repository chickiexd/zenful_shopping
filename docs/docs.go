// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "chickie",
            "url": "chickiexd.com",
            "email": "contact@chickiexd.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/pantry_ingredients": {
            "get": {
                "description": "Get all pantry_ingredients from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pantry_ingredients"
                ],
                "summary": "Get all pantry_ingredients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PantryIngredientResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/pantry_ingredients/add": {
            "post": {
                "description": "Add an ingredient to the pantry by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pantry_ingredients"
                ],
                "summary": "Add ingredient to pantry",
                "parameters": [
                    {
                        "description": "Ingredient ID to add",
                        "name": "ingredient_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PantryIngredientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/pantry_ingredients/remove": {
            "post": {
                "description": "Remove a ingredient from the pantry by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pantry_ingredients"
                ],
                "summary": "Remove a ingredient from the pantry",
                "parameters": [
                    {
                        "description": "Ingredient ID to remove",
                        "name": "ingredient_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PantryIngredientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/pantry_ingredients/remove_all": {
            "post": {
                "description": "Remove all ingredients from the pantry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pantry_ingredients"
                ],
                "summary": "Remove all ingredients from the pantry",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/recipes": {
            "get": {
                "description": "Get all recipes from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Get all recipes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RecipeResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Accepts multipart/form-data with JSON fields and an image to create a new recipe",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Create a new recipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe JSON string",
                        "name": "recipe",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ingredients JSON array",
                        "name": "ingredients",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Instructions JSON array",
                        "name": "instructions",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Recipe image file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recipe created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/recipes/add/{id}": {
            "post": {
                "description": "Add a recipe to the shopping list by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Add a recipe to the shopping list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Recipe ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/recipes/remove": {
            "post": {
                "description": "Remove a recipe from the shopping list by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Remove a recipe from the shopping list",
                "parameters": [
                    {
                        "description": "Recipe ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddRecipeToShoppingListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AddRecipeToShoppingListRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AddRecipeToShoppingListRequest": {
            "type": "object",
            "properties": {
                "recipe_id": {
                    "type": "integer"
                }
            }
        },
        "dto.InstructionResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "instruction_id": {
                    "type": "integer"
                },
                "step_number": {
                    "type": "integer"
                }
            }
        },
        "dto.PantryIngredientRequest": {
            "type": "object",
            "properties": {
                "ingredient_id": {
                    "type": "integer"
                }
            }
        },
        "dto.PantryIngredientResponse": {
            "type": "object",
            "properties": {
                "ingredient_id": {
                    "type": "integer"
                },
                "ingredient_name": {
                    "type": "string"
                }
            }
        },
        "dto.RecipeIngredientResponse": {
            "type": "object",
            "properties": {
                "ingredient_id": {
                    "type": "integer"
                },
                "measurement_unit_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "number"
                }
            }
        },
        "dto.RecipeResponse": {
            "type": "object",
            "properties": {
                "cook_time": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RecipeIngredientResponse"
                    }
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.InstructionResponse"
                    }
                },
                "meal_type": {
                    "type": "integer"
                },
                "public": {
                    "type": "boolean"
                },
                "recipe_id": {
                    "type": "integer"
                },
                "servings": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Zenful Shopping API",
	Description:      "This is the API for Zenful Shopping, a platform to manage your recipes, ingredients and shopping lists.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

name: CI/CD
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.23]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Verify dependencies
        run: go mod verify
      - name: Build
        run: go build -v ./...
      - name: Run go vet
        run: go vet ./...
      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - name: Run staticcheck
        run: staticcheck ./...
      - name: Run Tests
        run: go test -race ./...

  deploy:
    needs: build_and_test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Create Python virtual environment
        run: |
          python -m venv ./scripts/.venv
          source ./scripts/.venv/bin/activate
          pip install --upgrade pip
          pip install -r ./scripts/requirements.txt
      - name: Create .env file
        run: |
          cat > .env << EOF
          ADDR=${{ secrets.ADDR }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_ADDR=${{ secrets.DB_ADDR }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          GOOGLE_TOKEN=${{ secrets.GOOGLE_TOKEN }}
          GOOGLE_USERNAME=${{ secrets.GOOGLE_USERNAME }}
          FILE_STORAGE_PATH=${{ secrets.FILE_STORAGE_PATH }}
          EOF
      - name: Deploy with Docker Compose
        run: |
          docker compose down || true
          docker compose up -d --build
